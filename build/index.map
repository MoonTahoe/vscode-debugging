{"version":3,"sources":["webpack://library/webpack/universalModuleDefinition","webpack://library/webpack/bootstrap","webpack://library/./src/index.js","webpack://library/external \"@babel/polyfill\"","webpack://library/external \"apollo-server\""],"names":["require","ApolloServer","gql","typeDefs","resolvers","Query","gnar","server","listen","process","env","PORT","then","url","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;eClF8BA,mBAAO,CAAC,oCAAD,C;IAA7BC,Y,YAAAA,Y;IAAcC,G,YAAAA,G;;AAEtB,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;AAMA,IAAME,SAAS,GAAG;AAChBC,OAAK,EAAE;AACLC,QAAI,EAAE;AAAA,aAAM,WAAN;AAAA;AADD;AADS,CAAlB;AAMA,IAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAAEE,UAAQ,EAARA,QAAF;AAAYC,WAAS,EAATA;AAAZ,CAAjB,CAAf;AAEAG,MAAM,CAACC,MAAP,CAAcC,OAAO,CAACC,GAAR,CAAYC,IAA1B,EAAgCC,IAAhC,CAAqC,gBAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAChDC,SAAO,CAACC,GAAR,4CAAgDF,GAAhD;AACAC,SAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,aAAxB;AACAK,SAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,OAAO,CAACC,GAAR,CAAYC,IAAhC;AACD,CAJD,E;;;;;;;;;;;;;;;;;;;;;;;;AChBA,4C;;;;;;;;;;;ACAA,0C","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"library\"] = factory();\n\telse\n\t\troot[\"library\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const { ApolloServer, gql } = require(\"apollo-server\");\n\nconst typeDefs = gql`\n  type Query {\n    gnar: String!\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    gnar: () => \"gnarly!!!\",\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nserver.listen(process.env.PORT).then(({ url }) => {\n  console.log(`GraphQL apollo server running at ${url}`);\n  console.log(\"NODE_ENV\", process.env.NODE_ENV);\n  console.log(\"PORT\", process.env.PORT);\n});\n","module.exports = require(\"@babel/polyfill\");","module.exports = require(\"apollo-server\");"],"sourceRoot":""}